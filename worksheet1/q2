import numpy as np
 
def rref(M):
        lead = 0
        M1 = np.copy(M)
        rowCount = len(M1)
        columnCount = len(M1[0])
        for r in range(rowCount):
                if lead >= columnCount:
                        return
                i = r
                while (M1[i][lead] == 0):
                        i += 1
                        if (i == rowCount):
                                i = r
                                lead += 1
                                if (columnCount == lead):
                                        return
                M1[[r,i]] = M1[[i,r]]
 
                if (M1[r][lead] != 0):
                        M1[r] = M1[r]/M1[r][lead]
                for i in range (rowCount):
                        if (i != r):
                                M1[i] = M1[i] - M1[i][lead]*M1[r]
                lead += 1
        return M1

a = np.array([[1,2,0,3,0],[0,0,1,1,0],[0,0,0,0,1]],dtype = float)
# a = np.array([[1,-7,5,5],[0,1,3,2]],dtype = float)
# a = np.array([[1,2,3,4,5],[1,0,7,1,3],[0,0,0,0,1],[0,0,0,0,0]],dtype = float)
# a = np.array([[1,2,3],[0,0,1],[0,0,0],[0,0,0]],dtype = float)
b = rref(a)
print("Initial matrix: ")
print(a)
if (a==b).all():
    print("The matrix is in reduced row echelon form.")
else:
    print("The matrix is not in reduced row echelon form.")
    print("The rref of the given matrix:")
    print(b)
